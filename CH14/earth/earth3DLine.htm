<!DOCTYPE html>
<html>
<head>
    <title></title>
	<meta charset='utf-8'>
    <style>canvas { width: 100%; height: 100% }</style>
    <script src="js/three.js"></script>
	<script src="js/OrbitControls.js"></script>
</head>
<body>
	<div id="canvas-frame"></div>
    <script>
	    var threeDiv = document.getElementById( 'canvas-frame' );
        var scene = new THREE.Scene();
        
        var camera = new THREE.PerspectiveCamera(45, window.innerWidth/window.innerHeight, 0.1, 1000);
        
        var renderer = new THREE.WebGLRenderer();//WebGLRenderer( {antialias: true, alpha: true} );
		//renderer.setClearColor( 0xffffff, 0 );
        
        renderer.setSize(window.innerWidth, window.innerHeight);
        
		threeDiv.appendChild(renderer.domElement);

		// 球体网格模型
		var geometry = new THREE.SphereGeometry(100, 50, 50);

		var material = new THREE.MeshPhongMaterial({
				//wireframe: true,
				color: 0xFFFFFF,
				opacity:0.5,
                map:         getTexture('texture/earth/2_no_clouds_4k.jpg'),
				//map:         getTexture('texture/earth/earth_clouds_2048.png'),
				//map:         getTexture('texture/earth/hong.jpg'),
				//map:         getTexture('texture/earth/galaxy.png'),
                //bumpMap:     getTexture('texture/earth/elev_bump_4k.jpg'),//凹凸贴图
                transparent: true,
                emissiveIntensity: 0.05,
                //alphaMap:    getTexture('texture/earth/grey.jpg'),//透明度贴图，黑色：完全透明;白色：完全不透明
				
            });

	    //纹路加载函数
        function getTexture(str){//str为纹理url
            var loader = new THREE.TextureLoader();
            return loader.load(str);
        }


		var sphere = new THREE.Mesh(geometry, material); //网格模型对象Mesh
		//sphere.translateX(-100); //球体网格模型沿Y轴正方向平移120
		scene.add(sphere);


        camera.position.z =400;
		camera.position.x =30;
		camera.position.y =100;

		var ambient = new THREE.AmbientLight(0xFFFFFF);
		scene.add(ambient);

        creatAero(101);
                //大气层
        function creatAero(radius){
            var cloudsGeo = new THREE.SphereGeometry(radius,radius/2,radius/2);
            var cloudsMater = new THREE.MeshPhongMaterial({map:getTexture('texture/earth/earth_clouds_2048.png'),transparent:true,opacity:1});
            var cloudsMesh = new THREE.Mesh(cloudsGeo,cloudsMater);
            scene.add(cloudsMesh);
        }

        var orbitControls = new THREE.OrbitControls(camera, threeDiv);
        orbitControls.target = sphere.position;//控制焦点
        orbitControls.autoRotate = true;//自动旋转
        scene.controls = orbitControls;

		render();
		function render()
        {
            scene.controls.update();
            //object_selection.render(group, scene.userData.camera);
            renderer.render(scene, camera);
            requestAnimationFrame(render);
        }	
		//renderer.render(scene, camera);
		createLink();

        function createLink(){
            var locations = [
                    {
                        name: '中国',
                        position: {x: 75.00796918081518, y: 61.91934379181622,z: -28.073357639817498},
                    }, {
                        name: '英国',
                        position: {x: -0, y: 80.19051430548129, z: 57.366479276535955},
                    }];
            var firstSprite;
            for(let i in locations){
                var sprite = createLocationSprite(locations[i].position);
                scene.add( sprite );

                var textSprite = createText(locations[i].position, locations[i].name);
                scene.add( textSprite );
                console.log(i);
                if(i == 0){
                    firstSprite = sprite;
                }
                else{
                    createLine(firstSprite, sprite);
                }
            }

        }
		function createLine(obj0, obj1, radius){
            var positions = [];
            positions.push(obj0.position);

            var midVector = obj0.position.clone().add(obj1.position.clone());
            if(midVector.length () > radius*1.5){
                midVector.multiplyScalar(0.8);
            }
            positions.push(midVector);
            
            positions.push(obj1.position);
            
            var curve = new THREE.CatmullRomCurve3( positions );//Create a smooth 3d spline curve from a series of points
            //https://threejs.org/docs/#api/en/extras/curves/CatmullRomCurve3

            lightMove(curve);

            var points = curve.getPoints( 50 );//从曲线中取出position，细分数为20
            var geometry = new THREE.BufferGeometry().setFromPoints( points );

            var material = new THREE.LineBasicMaterial( { color : 0x2376DD } );
            var curveObject = new THREE.Line( geometry, material );
            scene.add(curveObject);
        }
		function createLocationSprite(position){
            var spriteMaterial = new THREE.SpriteMaterial({
                map: getTexture('texture/sprite/snowflake7_alpha.png'),
            });
            var sprite = new THREE.Sprite(spriteMaterial);

            sprite.position.set(position.x*1.03, position.y*1.03, position.z*1.03);
            sprite.scale.set(5,5,5);

            return sprite

        }
		function createText(position, title){
            let canvas = document.createElement("canvas");
            canvas.width = 512;
            canvas.height = 512;
            let ctx = canvas.getContext("2d");
            ctx.fillStyle = "#000000";
            ctx.font = "40px Yahei";
            ctx.textAlign = 'center';
            ctx.textBaseline = 'middle';
            ctx.fillText(title, 256, 256, 512);

            let spriteMap = new THREE.CanvasTexture(canvas);
            spriteMap.needsUpdate = true;
            let spriteMaterial = new THREE.SpriteMaterial({map: spriteMap});

            let sprite = new THREE.Sprite(spriteMaterial);
            sprite.scale.set(30, 30, 1);
            
            sprite.position.copy(position).multiplyScalar(1.05);
            return sprite
        }
		function lightMove(curve){
            var that = this;
            var pointGeometry = new THREE.SphereGeometry(1, 20, 20);
            var pointMaterial = new THREE.MeshBasicMaterial({color: 0xFFCF71});

            addLightPoint();
            function addLightPoint() {
                var index = 0;
                var pointMesh = new THREE.Mesh(pointGeometry, pointMaterial);

                pointMesh.position.copy(curve.getPointAt(index));
                that.scene.add(pointMesh);

                function pointAnimate() {
                    index+=0.001;
                    if(index>= 1) {
                        index = 0;
                    }
                    pointMesh.position.copy(curve.getPointAt(index));
                    requestAnimationFrame(pointAnimate);
                }
                pointAnimate();
            }

        }

    </script>
</body>
</html>
<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8">
	<title>Fake-3D Tree</title>
</head>
<body id="mybody">
<style type="text/css">
*{
	font-family: "Microsoft YaHei";
	color: #a0a0a0;
	margin: 0;
	/*box-sizing: border-box;*/
}
html{
	height: 100%;
	width: 100%;
	margin: 0;
}
body{
	margin: 0;
	width: 100%;
	height: 100%;
	background-color: #1a1a1b;
	/*background-image: url(star.svg);*/
	overflow: hidden;
}
button {
    font-size: 12px;
    background-color: #464646;
    border: 2px solid #7f7f7f;
    color: #f4f2ef;
    border-radius: 3px;
    text-transform: uppercase;
    outline: none;
    font-weight: 500;
    padding: 3px 8px;
    cursor: pointer;
    margin: 0 3px;
    float: left;
}
/*svg{
	width:100%;
	height: 100%;
}*/
.inputBox{
	position: fixed;
	right:4%;
	bottom: 4%;
	z-index: 20;/*用于让inputbox浮在最上面*/
}
.background,svg{
	width:100%;
	height: 100%;
  	position:absolute;
    top:0px;
    left:0px;
    z-index: 15;
}
.treebox,svg{
	width:100%;
	height: 100%;
	position:absolute;
    top:0px;
    left:0px;
    z-index: 16;
}
.sigbox{
	position: fixed;
	left:4%;
	top: 4%;
	z-index: 50;
}
//以下是用于签名的css
#signPath {
    position: absolute;
    /*top: 50%;
    left: 50%;*/
    /*-webkit-transform: translate(-50%, -50%);*/
}
@keyframes letterDraw {
  0%{
      stroke-dashoffset: 100%;
  }
  100%{
      stroke-dashoffset: 0;
	}
}
.path {
    stroke-dasharray:100%;
   /* stroke-dashoffset: 100%;*/
    animation: letterDraw 5s ease forwards;
}


//以上是用于签名的CSS
</style>

<div class="inputBox">
	<button type="button" id="grow" onclick="letItGrow()">长一个看看！</button><br>
	<button type="button" id="stop" onclick="stopGrow()">快停下快停下！</button><br>
	<button type="button" id="stop" onclick="reGrow()">继续吧继续吧！</button><br>
	<input type="range" name="rate" id="myrange" max="1" min="0.01" step="0.01" value="0.69">
	<p>长度衰减率</p>
</div>

<svg>
	<defs>
	<polygon id="star" points="0 -10 2 -2 10 0 2 2 0 10 -2 2 -10 0 -2 -2" fill="#FDFDF4"></polygon>
	</defs>
</svg>
<div id="sigBox">
	<svg version="1.1" id="signPath" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" >
	<g stroke="#FDFDF4" stroke-width="3" fill="none" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round">
	     <path class="path" d="m291.33334,20.66669c-2.44266,0 -3.30923,-0.10455 -4.19467,0.072c-0.83032,0.16556 -1.51065,0.50019 -2.37866,0.77867c-0.94519,0.30324 -1.41656,0.4757 -2.76001,0.816c-0.73181,0.18537 -1.75314,0.36216 -2.50598,0.553c-0.43997,0.11153 -1.4989,0.43336 -2.86734,0.93233c-0.83475,0.30437 -1.77463,0.67408 -2.83499,1.098c-1.19315,0.47701 -2.52466,1.02216 -4.005,1.638c-3.45642,1.43792 -5.43619,2.28157 -7.55466,3.17867c-2.21088,0.93622 -4.46878,1.89467 -6.73201,2.85c-2.22212,0.93798 -4.35857,1.84003 -6.37201,2.67c-3.4566,1.42485 -4.83675,1.9638 -6.00533,2.40267c-0.99983,0.3755 -1.88751,0.68673 -2.70601,0.969c-0.79752,0.27503 -1.62663,0.55197 -2.526,0.879c-2.2307,0.81113 -3.63118,1.37433 -5.23199,2.01333c-1.77533,0.70867 -3.69592,1.48819 -5.742,2.316c-2.14592,0.8682 -4.36595,1.76913 -6.642,2.676c-4.60388,1.83438 -6.89915,2.71841 -9.18666,3.59467c-2.29317,0.87842 -4.61084,1.75422 -6.963,2.646c-2.40251,0.91087 -4.87096,1.84473 -7.41301,2.826c-5.38353,2.07811 -8.23256,3.21424 -11.15999,4.384c-2.96193,1.18354 -5.90941,2.37319 -8.802,3.54c-2.79274,1.12653 -5.43898,2.19925 -7.90201,3.18c-4.17735,1.66338 -5.82605,2.29279 -7.19733,2.8c-1.13115,0.4184 -2.07169,0.7476 -2.85901,1.02c-0.67673,0.23414 -1.28955,0.43718 -1.86899,0.66c-1.26411,0.48611 -2.00635,0.83202 -2.84534,1.21867c-0.92653,0.42698 -1.9256,0.90345 -2.994,1.413c-1.12894,0.53842 -2.30771,1.10543 -3.534,1.683c-2.54599,1.19913 -3.85617,1.79391 -5.17334,2.38667c-1.31084,0.5899 -2.60756,1.16369 -3.87599,1.722c-1.22758,0.54033 -2.40454,1.05345 -3.51601,1.542c-1.98495,0.87249 -2.83736,1.25268 -3.60001,1.60267c-0.68924,0.3163 -1.31404,0.61186 -1.88399,0.897c-0.53395,0.26714 -1.03917,0.53234 -1.524,0.807c-0.98254,0.55662 -1.48567,0.87591 -2.008,1.2c-0.53168,0.3299 -1.06314,0.6654 -1.593,0.993c-0.51816,0.32037 -1.01748,0.62988 -1.503,0.903c-0.86419,0.48615 -1.24981,0.65902 -1.59467,0.8c-0.3042,0.12435 -0.57868,0.21595 -0.819,0.297c-0.21035,0.07095 -0.39992,0.12349 -0.549,0.207c-0.25749,0.14423 -0.34028,0.27344 -0.408,0.40266c-0.07007,0.13371 -0.11733,0.28267 -0.168,0.432l-0.05067,0.14933l-0.05466,0.14534l-0.06267,0.13733"/>
		  <path class="path" d="m489.33334,176c-2.44266,0.00034 -3.52072,-0.04657 -3.88568,0.70534c-0.42273,0.87094 -0.68231,1.29466 -1.54633,1.29466c-1.01065,0 -2.0531,-0.42143 -2.56799,0.33333c-0.45987,0.67409 -0.11429,1.66217 -1,1.66667c-0.88568,0.0045 -1.9014,-0.33281 -2.66666,0.33333c-0.56219,0.48938 -0.76883,1.45154 -1.62802,1.65767c-0.867,0.20801 -1.37097,0.77708 -2.11432,1.30367c-0.74741,0.52945 -1.71881,0.69467 -2.591,0.70534c-0.85062,0.01041 -1.86081,-0.03479 -2.44299,0.44267c-0.63245,0.51868 -1.53439,1.29907 -2.14801,1.44299c-1.05313,0.24701 -1.74234,0.44766 -2.409,1.11433c-0.66666,0.66667 -1.45651,0.91074 -2.22134,1.07201c-0.80368,0.16945 -1.53571,0.80379 -2.20798,1.36c-0.71667,0.59296 -1.65814,0.48808 -2.57068,0.90132c-0.6431,0.29123 -1.12344,0.9651 -2.19968,1.42368c-0.72211,0.30768 -1.70581,0.23917 -2.371,0.81099c-0.66168,0.56879 -1.40469,1.19191 -2.22931,1.36c-0.78683,0.1604 -1.82025,-0.02118 -2.60001,0.18634c-0.836,0.22249 -1.38409,0.80064 -2.11435,1.18033c-1.082,0.56256 -1.79156,0.59622 -2.48566,0.70534c-1.0329,0.16238 -1.99661,0.37654 -2.70667,0.85066c-0.76959,0.51389 -1.36694,1.28918 -2.01666,1.85468c-0.54501,0.47435 -1.603,0.99117 -2.24466,1.12666c-1.02304,0.21603 -1.75366,0.17934 -2.69867,0.50133c-0.85147,0.29012 -1.45795,0.91396 -2.33334,1.33334c-0.78333,0.37529 -1.53006,0.38998 -2.64267,0.776c-0.67343,0.23364 -1.35019,0.57474 -2.052,0.85199c-1.2504,0.49399 -2.06195,0.56229 -2.90265,0.87334c-0.84109,0.31119 -1.33286,0.95103 -2.40268,1.49867c-0.57886,0.29631 -1.52704,0.39717 -2.33334,0.66666c-0.99014,0.33093 -1.67798,0.6877 -2.36133,1.07567c-0.98926,0.56163 -1.52188,1.0101 -2.30533,1.54933c-0.49597,0.34137 -1.63907,0.81763 -2.30533,0.93634c-1.03922,0.18517 -1.75836,0.18323 -2.65167,0.548c-0.80756,0.32976 -1.3649,1.01025 -2.44299,1.38666c-0.76834,0.26826 -1.81018,0.07863 -2.60001,0.21234c-1.02704,0.17387 -1.60901,0.67267 -2.272,1.17966c-0.49866,0.38133 -1.35437,1.00768 -2.37866,1.55734c-0.68829,0.36935 -1.36658,0.69576 -2.30634,0.97867c-0.7608,0.22903 -1.68192,0.33939 -2.64301,0.948c-0.63062,0.39934 -1.37537,1.05457 -2.19998,1.22266c-0.78683,0.1604 -1.90338,-0.20663 -2.62933,0.24268c-0.72791,0.45052 -0.86707,1.61919 -1.72,1.808c-0.87341,0.19334 -1.73602,0.464 -2.552,0.87199c-0.59735,0.29868 -1.58423,0.95906 -2.328,1.12801c-0.82202,0.18672 -1.58188,-0.10033 -2.74933,0.04266c-0.66263,0.08116 -0.9711,1.19833 -1.66434,1.73567c-0.63965,0.4958 -1.78107,0.08949 -2.51535,0.28467c-0.86395,0.22964 -0.98795,1.47911 -1.74698,1.84399c-0.87253,0.41945 -1.93225,-0.10114 -2.58936,0.22867c-0.75269,0.37778 -0.99893,1.67905 -1.74698,1.84399c-0.93674,0.20656 -1.77695,-0.2348 -2.71567,0.04201c-0.78238,0.23071 -1.0806,1.20778 -2,1.75667c-0.72665,0.43381 -1.62479,-0.00371 -2.41068,0.41367c-0.85098,0.45195 -1.26401,1.26134 -1.94632,1.82933l-0.88568,0l-0.92801,0.02133" />
	</g>
	</svg>
<!-- 	<script>
		var path = document.getElementById("signPath");
		var pathLength = path.getTotalLength();
		path.setAttribute("stroke-dasharray", "0 " + pathLength);
	</script> -->
</div>		

<div id="background">
	<svg id="mystar">
		<!-- 装载星星 -->
		<g id="star-group"></g>
	</svg>
	<script>
		//下面开始画星星
		// SVG元素的命名空间
		var svgNS = "http://www.w3.org/2000/svg";
		var XLINK_NS = "http://www.w3.org/1999/xlink";
		// 将use属性封装成函数，以便调用
		function use(origin) {
			var _use = document.createElementNS(svgNS, "use");
			_use.setAttributeNS(XLINK_NS, "xlink:href", "#" + origin.id);
			return _use;
		}
		// 创建任意两个数之间的随机数
		function random(min, max) {
			return min + (max - min) * Math.random();
		}
		// 绘制满天星星
		function drawStar(){
			// 获取星星原型和装载满天星星的容器star-group
			var starRef = document.getElementById("star");
			var starGroup = document.getElementById("star-group");
			// 星星的总数量
			var starCount = 500;
			// 循环，画出 starCount 个星星
			for(var i = 1; i < starCount; i++) {
				// star引用starRef原型
				var star;
				star = use(starRef);
				// 让星星的透明度、位置和大小随机变化
				star.setAttribute("opacity", random(0.1, 0.4));
				star.setAttribute("transform", "translate(" + random(0, window.innerWidth) + "," + random(0, window.innerHeight) + ") " + "scale(" + random(window.innerWidth*0.0005, window.innerHeight*0.0005) + ")");
				// 将绘制好星星置入starGroup的DOM
				starGroup.appendChild(star);
			}
		}
		function reDrawStar(){
			//清空画布
			svgstar = document.getElementById("star-group")
			svgstar.innerHTML="";
			drawStar();
		}

	//画完了星星

	</script>
</div>

<div id="treebox">
	<svg id="mysvg">
	</svg>

	<script type="text/javascript">

	//下面开始画树
	var svg = document.getElementById("mysvg");		//svg画板
	var range = document.getElementById("myrange");	//调整树枝长度衰减率rate拖动条
	var d = 34;							//树枝分叉偏移角度（°）
	var delta = 8;						//树枝分叉偏移角度偏移范围（°）
	var rate = 0.69;					//树枝长度衰减率
	var x0;								//初始x位置
	var y0;								//初始y位置
	var l;								//初始枝干长度
	var count = 7;						//迭代次数
	//
	//网上找的正态分布函数
	//
	function getNumberInNormalDistribution(mean,std_dev){
    	return mean+(randomNormalDistribution()*std_dev);
	}
	function randomNormalDistribution(){
	    var u=0.0, v=0.0, w=0.0, c=0.0;
	    do{
	        //获得两个（-1,1）的独立随机变量
	        u=Math.random()*2-1.0;
	        v=Math.random()*2-1.0;
	        w=u*u+v*v;
	    }while(w==0.0||w>=1.0)
	    //这里就是 Box-Muller转换
	    c=Math.sqrt((-2*Math.log(w))/w);
	    //返回2个标准正态分布的随机数，封装进一个数组返回
	    //当然，因为这个函数运行较快，也可以扔掉一个
	    //return [u*c,v*c];
	    return u*c;
	}

	//
	//分形树绘制函数
	//
	function drawTree(svg,x0,y0,l,rate,angle,n){
		var x = x0 + l * Math.cos(angle/360 * 2 * Math.PI);
		if(n == 0)	//根据计数，画完了返回
			return;
		var rand = d/2 - d * Math.random();
		var y = y0 - l * Math.sin(angle/360 * 2 * Math.PI);
		svg.innerHTML+="<line x1='" + x0 + "' y1='" + y0 + "' x2='" + x + "' y2='" + y + "' style='stroke:rgb(" + Math.round((255-angle)%255) + "," + Math.round((255-angle)%255) + "," + Math.round((255-angle)%255) + ");stroke-width:"+ 1.5*n+"'/>";
		drawTree(svg,x,y,l*rate,rate,(angle + getNumberInNormalDistribution(d,delta)),n-1);//左枝杈，真正枝杈偏移角度经过正态分布函数计算，有抖动
		drawTree(svg,x,y,l*rate,rate,(angle - getNumberInNormalDistribution(d,delta)),n-1);//右枝杈，真正枝杈偏移角度经过正态分布函数计算，有抖动
	}
	//更新值并重绘
	function reDrawTree(){
		svg.innerHTML="";
		x0 = window.innerWidth * 0.5;
		y0 = window.innerHeight;
		l = window.innerHeight * 0.35;
		drawTree(svg,x0,y0,l,rate,90,count);
	}
	//任其生长
	var grow;								//动画对象
	function letItGrow(){
		range.value = range.min;			//初始生长状态
		grow = setInterval(function(){
			//---以下部分为手动搬运range.onchange内容---
			rate = range.value;
			reDrawTree();
			//---以上部分为手动搬运range.onchange内容---
			if(range.value == range.max)	//长够了就停下
				clearInterval(grow);
			range.value = parseFloat(range.value)
			 + parseFloat(range.step);		//长一个步长
		},40);
	}
	function stopGrow(){
		clearInterval(grow);
	}
	function reGrow(){
		grow = setInterval(function(){
			//---以下部分为手动搬运range.onchange内容---
			rate = range.value;
			reDrawTree();
			//---以上部分为手动搬运range.onchange内容---
			if(range.value == range.max)	//长够了就停下
				clearInterval(grow);
			range.value = parseFloat(range.value)
			 + parseFloat(range.step);		//长一个步长
		},40);
	}
	// 树画完了

	window.onload = function(){
		reDrawStar();
		reDrawTree();
	}

	window.onresize = function(){
		reDrawStar();
		reDrawTree();
	}

	range.onchange= function(){
		rate = range.value;
		reDrawTree();
	}
</script>
</div>

</body>
</html>